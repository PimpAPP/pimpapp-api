# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-28 21:21
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Carroceiro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=64, verbose_name='Nome')),
                ('minibio', models.CharField(blank=True, max_length=140, null=True)),
                ('catador_type', models.CharField(choices=[('C', 'Catador'), ('O', 'Cooperativa'), ('P', 'Ecoponto')], default='C', max_length=1)),
                ('is_locked', models.BooleanField(default=False, verbose_name='Permite edição Publica')),
                ('address_base', models.CharField(blank=True, max_length=128, null=True, verbose_name='Endereço onde costuma trabalhar.')),
                ('region', models.CharField(blank=True, max_length=64, null=True, verbose_name='Região onde costuma trabalhar.')),
                ('city', models.CharField(blank=True, max_length=64, null=True, verbose_name='Cidade em que trabalha')),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('has_motor_vehicle', models.BooleanField(default=False, verbose_name='Tem veículo motorizado.')),
                ('carroca_pimpada', models.BooleanField(default=False, verbose_name='Teve a Carroça Pimpada?')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Catadores e Cooperativas',
            },
        ),
        migrations.CreateModel(
            name='Collect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('catador_confirms', models.BooleanField()),
                ('user_confirms', models.BooleanField()),
                ('active', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('carroceiro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Carroceiro')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalCarroceiro',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=64, verbose_name='Nome')),
                ('minibio', models.CharField(blank=True, max_length=140, null=True)),
                ('catador_type', models.CharField(choices=[('C', 'Catador'), ('O', 'Cooperativa'), ('P', 'Ecoponto')], default='C', max_length=1)),
                ('is_locked', models.BooleanField(default=False, verbose_name='Permite edição Publica')),
                ('address_base', models.CharField(blank=True, max_length=128, null=True, verbose_name='Endereço onde costuma trabalhar.')),
                ('region', models.CharField(blank=True, max_length=64, null=True, verbose_name='Região onde costuma trabalhar.')),
                ('city', models.CharField(blank=True, max_length=64, null=True, verbose_name='Cidade em que trabalha')),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('has_motor_vehicle', models.BooleanField(default=False, verbose_name='Tem veículo motorizado.')),
                ('carroca_pimpada', models.BooleanField(default=False, verbose_name='Teve a Carroça Pimpada?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical Catadores e Cooperativas',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCollect',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('catador_confirms', models.BooleanField()),
                ('user_confirms', models.BooleanField()),
                ('active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('carroceiro', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Carroceiro')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical collect',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLatitudeLongitude',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('reverse_geocoding', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('carroceiro', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Carroceiro')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical latitude longitude',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLatitudeLongitudeColeta',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('reverse_geocoding', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('coleta', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Collect')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical latitude longitude coleta',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMaterial',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('freight', models.BooleanField(default=False, verbose_name='Serviço de Frete e Carreto')),
                ('large_objects', models.BooleanField(default=False, help_text='Exemplo: sofá, geladeira, fogão, etc...', verbose_name='Volumosos')),
                ('demolition_waste', models.BooleanField(default=False, help_text='entulho, tintas, madeira, etc...', verbose_name='Resíduo de Construção Civil')),
                ('e_waste', models.BooleanField(default=False, help_text='Exemplo: computadores, pilhas, baterias, etc...', verbose_name='Eletroeletrônicos')),
                ('paper', models.BooleanField(default=False, help_text='Exemplo: jornal, revista, papel branco, papelão, etc...', verbose_name='Papel')),
                ('glass', models.BooleanField(default=False, help_text='Exemplo: garrafas, embalagens, etc...', verbose_name='Vidro')),
                ('plastic', models.BooleanField(default=False, help_text='Exemplo: embalagens, canos, etc..', verbose_name='Plástico')),
                ('metal', models.BooleanField(default=False, help_text='Exemplo: ferro, cobre, alumínio, etc..)', verbose_name='Metais')),
                ('wood', models.BooleanField(default=False, help_text='Exemplo: tábuas, ripas, etc...', verbose_name='Madeira')),
                ('cooking_oil', models.BooleanField(default=False, verbose_name='Óleo de cozinha')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('carroceiro', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Carroceiro')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical Serviços e Meteriais',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMaterialColeta',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('freight', models.BooleanField(default=False, verbose_name='Serviço de Frete e Carreto')),
                ('large_objects', models.BooleanField(default=False, help_text='Exemplo: sofá, geladeira, fogão, etc...', verbose_name='Volumosos')),
                ('demolition_waste', models.BooleanField(default=False, help_text='entulho, tintas, madeira, etc...', verbose_name='Resíduo de Construção Civil')),
                ('e_waste', models.BooleanField(default=False, help_text='Exemplo: computadores, pilhas, baterias, etc...', verbose_name='Eletroeletrônicos')),
                ('paper', models.BooleanField(default=False, help_text='Exemplo: jornal, revista, papel branco, papelão, etc...', verbose_name='Papel')),
                ('glass', models.BooleanField(default=False, help_text='Exemplo: garrafas, embalagens, etc...', verbose_name='Vidro')),
                ('plastic', models.BooleanField(default=False, help_text='Exemplo: embalagens, canos, etc..', verbose_name='Plástico')),
                ('metal', models.BooleanField(default=False, help_text='Exemplo: ferro, cobre, alumínio, etc..)', verbose_name='Metais')),
                ('wood', models.BooleanField(default=False, help_text='Exemplo: tábuas, ripas, etc...', verbose_name='Madeira')),
                ('cooking_oil', models.BooleanField(default=False, verbose_name='Óleo de cozinha')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('coleta', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Collect')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical Serviços e Meteriais',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhone',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('phone', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='Phone number must have at least 8 digits and/or up to 15 digits.', regex='^\\d{8,15}$')], verbose_name='Telefone Móvel')),
                ('mno', models.CharField(blank=True, choices=[('V', 'Vivo'), ('T', 'TIM'), ('C', 'Claro'), ('O', 'Oi'), ('N', 'Nextel'), ('P', 'Porto Conecta')], max_length=1, null=True, verbose_name='Operadora Móvel')),
                ('has_whatsapp', models.BooleanField(default=False, verbose_name='Usa o WhatsAPP?')),
                ('mobile_internet', models.BooleanField(default=False, verbose_name='Tem acesso a internet móvel?')),
                ('notes', models.CharField(blank=True, max_length=140, null=True, verbose_name='Comentário')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('carroceiro', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Carroceiro')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical phone',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhoto',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('full_photo', models.TextField(max_length=100)),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Primary Point of Interest (PPOI)')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('carroceiro', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Carroceiro')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical photo',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhotoBase',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('full_photo', models.TextField(max_length=100)),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Primary Point of Interest (PPOI)')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical photo base',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhotoCollectCatador',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('full_photo', models.TextField(max_length=100)),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Primary Point of Interest (PPOI)')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('coleta', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Collect')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical photo collect catador',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhotoCollectUser',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('full_photo', models.TextField(max_length=100)),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Primary Point of Interest (PPOI)')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('coleta', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Collect')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical photo collect user',
            },
        ),
        migrations.CreateModel(
            name='HistoricalRating',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('rating', models.CharField(choices=[('+', 'Positiva'), ('0', 'Neutra'), ('-', 'Negativa')], max_length=1, verbose_name='Avaliação')),
                ('comment', models.CharField(blank=True, max_length=140, verbose_name='Comentário')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('carroceiro', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Carroceiro')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical Comentário e Avaliação',
            },
        ),
        migrations.CreateModel(
            name='LatitudeLongitude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('reverse_geocoding', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('carroceiro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Carroceiro')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LatitudeLongitudeColeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('reverse_geocoding', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('coleta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Collect')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('freight', models.BooleanField(default=False, verbose_name='Serviço de Frete e Carreto')),
                ('large_objects', models.BooleanField(default=False, help_text='Exemplo: sofá, geladeira, fogão, etc...', verbose_name='Volumosos')),
                ('demolition_waste', models.BooleanField(default=False, help_text='entulho, tintas, madeira, etc...', verbose_name='Resíduo de Construção Civil')),
                ('e_waste', models.BooleanField(default=False, help_text='Exemplo: computadores, pilhas, baterias, etc...', verbose_name='Eletroeletrônicos')),
                ('paper', models.BooleanField(default=False, help_text='Exemplo: jornal, revista, papel branco, papelão, etc...', verbose_name='Papel')),
                ('glass', models.BooleanField(default=False, help_text='Exemplo: garrafas, embalagens, etc...', verbose_name='Vidro')),
                ('plastic', models.BooleanField(default=False, help_text='Exemplo: embalagens, canos, etc..', verbose_name='Plástico')),
                ('metal', models.BooleanField(default=False, help_text='Exemplo: ferro, cobre, alumínio, etc..)', verbose_name='Metais')),
                ('wood', models.BooleanField(default=False, help_text='Exemplo: tábuas, ripas, etc...', verbose_name='Madeira')),
                ('cooking_oil', models.BooleanField(default=False, verbose_name='Óleo de cozinha')),
                ('carroceiro', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='materials', to='api.Carroceiro')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Serviços e Meteriais',
                'verbose_name_plural': 'Serviços e Meteriais',
            },
        ),
        migrations.CreateModel(
            name='MaterialColeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('freight', models.BooleanField(default=False, verbose_name='Serviço de Frete e Carreto')),
                ('large_objects', models.BooleanField(default=False, help_text='Exemplo: sofá, geladeira, fogão, etc...', verbose_name='Volumosos')),
                ('demolition_waste', models.BooleanField(default=False, help_text='entulho, tintas, madeira, etc...', verbose_name='Resíduo de Construção Civil')),
                ('e_waste', models.BooleanField(default=False, help_text='Exemplo: computadores, pilhas, baterias, etc...', verbose_name='Eletroeletrônicos')),
                ('paper', models.BooleanField(default=False, help_text='Exemplo: jornal, revista, papel branco, papelão, etc...', verbose_name='Papel')),
                ('glass', models.BooleanField(default=False, help_text='Exemplo: garrafas, embalagens, etc...', verbose_name='Vidro')),
                ('plastic', models.BooleanField(default=False, help_text='Exemplo: embalagens, canos, etc..', verbose_name='Plástico')),
                ('metal', models.BooleanField(default=False, help_text='Exemplo: ferro, cobre, alumínio, etc..)', verbose_name='Metais')),
                ('wood', models.BooleanField(default=False, help_text='Exemplo: tábuas, ripas, etc...', verbose_name='Madeira')),
                ('cooking_oil', models.BooleanField(default=False, verbose_name='Óleo de cozinha')),
                ('coleta', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='materials', to='api.Collect')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Serviços e Meteriais',
                'verbose_name_plural': 'Serviços e Meteriais',
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('phone', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='Phone number must have at least 8 digits and/or up to 15 digits.', regex='^\\d{8,15}$')], verbose_name='Telefone Móvel')),
                ('mno', models.CharField(blank=True, choices=[('V', 'Vivo'), ('T', 'TIM'), ('C', 'Claro'), ('O', 'Oi'), ('N', 'Nextel'), ('P', 'Porto Conecta')], max_length=1, null=True, verbose_name='Operadora Móvel')),
                ('has_whatsapp', models.BooleanField(default=False, verbose_name='Usa o WhatsAPP?')),
                ('mobile_internet', models.BooleanField(default=False, verbose_name='Tem acesso a internet móvel?')),
                ('notes', models.CharField(blank=True, max_length=140, null=True, verbose_name='Comentário')),
                ('carroceiro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Carroceiro')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhotoBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('full_photo', versatileimagefield.fields.VersatileImageField(upload_to='full_photo')),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Primary Point of Interest (PPOI)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('rating', models.CharField(choices=[('+', 'Positiva'), ('0', 'Neutra'), ('-', 'Negativa')], max_length=1, verbose_name='Avaliação')),
                ('comment', models.CharField(blank=True, max_length=140, verbose_name='Comentário')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('carroceiro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Carroceiro')),
            ],
            options={
                'verbose_name': 'Comentário e Avaliação',
                'verbose_name_plural': 'Comentários e Avaliações',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('photobase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.PhotoBase')),
                ('carroceiro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Carroceiro')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.photobase',),
        ),
        migrations.CreateModel(
            name='PhotoCollectCatador',
            fields=[
                ('photobase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.PhotoBase')),
                ('coleta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Collect')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.photobase',),
        ),
        migrations.CreateModel(
            name='PhotoCollectUser',
            fields=[
                ('photobase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.PhotoBase')),
                ('coleta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Collect')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.photobase',),
        ),
        migrations.AddField(
            model_name='photobase',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalphotocollectuser',
            name='photobase_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PhotoBase'),
        ),
        migrations.AddField(
            model_name='historicalphotocollectcatador',
            name='photobase_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PhotoBase'),
        ),
        migrations.AddField(
            model_name='historicalphoto',
            name='photobase_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PhotoBase'),
        ),
    ]
